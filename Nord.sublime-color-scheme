// Documentation at https://www.sublimetext.com/docs/color_schemes.html
{
    "variables": {},
    "globals": {},
    "rules": [
        {
            // "scope": "keyword.declaration.enum.type, keyword.declaration.struct.type, keyword.declaration.class, keyword.declaration.template, meta.template.c++ keyword.declaration.c++, keyword.declaration.type, keyword.declaration.function.python",
            "scope": "keyword.declaration",
            "foreground": "#81A1C1"
        },
        {
            "scope": "constant.numeric.suffix",
            "foreground": "#81A1C1"
        },
        {
            "name": "Decorators/Annotations",
            "scope": "variable.annotation",
            // Use the below rule to also include the @ sign before most annotations
            // "scope": "punctuation.definition.annotation, variable.annotation",
            // "foreground": "#ef8888",
            "foreground": "#b48ead"
        },
        {
            "name": "HTML Entities",
            "scope": "constant.character.entity.named.html",
            // "foreground": "#def719"
            "foreground": "#f7a619"
        },
        {
            "name": "Cpp [[...]] annotations",
            "scope": "source.c++ meta.brackets - punctuation",
            // "foreground": "#9abd6d",
            "foreground": "#bd7a6d",
        },
        {
            "name": "Rust: Macros",
            "scope": "support.macro.rust",
            "foreground": "#bda06d",
        },
        {
            "name": "Rust type alias target",
            "scope": "entity.name.type.rust",
            "foreground": "#bd93f9",
        },
        {
            "name": "Rust: Arrow before return type",
            "scope": "source.rust meta.function meta.function.return-type punctuation.separator",
            "foreground": "#db9191"
        },
        {
            "name": "Rust: Trait names after impl keyword",
            "scope": "source.rust meta.impl.rust - meta.block - punctuation, source.rust meta.impl support.type - meta.block - punctuation",
            "foreground": "#b48ead"
        },
        {
            "name": "Rust: Struct name after 'impl' keyword",
            "scope": "meta.impl.rust entity.name.impl",
            "foreground": "#C78F84"
        },
        {
            "name": "Rust: Struct type name in normal types (variable types + func param types)",
            "scope": "meta.generic.rust - punctuation.definition - meta.function.return-type - meta.impl, meta.function.rust meta.function.parameters - punctuation - variable",
            "foreground": "#8FBCBB"
        },
        {
            "name": "Rust: Struct type name in function return types",
            "scope": "meta.function.rust meta.function.return-type - punctuation",
            "foreground": "#8FBCBB",
        },
        {
            "name": "Rust: Constant declaration",
            "scope": "source.rust entity.name.constant",
            "foreground": "#E89898"
        },
        {
            "name": "Rust: Constant reference",
            "scope": "source.rust constant.other",
            "foreground": "#E7B187"
        },
        /* ==================== L S P - S E M A N T I C - H I G H L I G H T I N G :) ====================*/
        {
            "scope": "meta.semantic-token",
            "background": "#00000101"
        },
        // {
        // "scope": "meta.semantic-token.keyword",
        // "foreground": "#81a1c1"
        // },
        {
            "scope": "meta.path.rust, meta.semantic-token.namespace",
            // "foreground": "#D8DEE9",
            // "foreground": "#b48ead",
            "foreground": "#b4b08e",
        },
        {
            "scope": "meta.semantic-token.namespace.declaration",
            "foreground": "#D8DEE9",
        },
        {
            "scope": "meta.semantic-token.type",
            "foreground": "#8FBCBB"
        },
        {
            "scope": "meta.semantic-token.class",
            "foreground": "#8FBCBB"
        },
        {
            "scope": "meta.semantic-token.enum",
            "foreground": "#bd93f9",
        },
        {
            "scope": "meta.semantic-token.interface",
            "foreground": "#b48ead",
        },
        {
            "scope": "storage.type.source.rust, meta.semantic-token.struct",
            "foreground": "#8FBCBB"
        },
        {
            "scope": "meta.semantic-token.typeparameter",
            // "foreground": "#D8DEE9"
            "foreground": "#70cc97"
        },
        {
            "scope": "meta.semantic-token.parameter",
            "foreground": "#D8DEE9"
        },
        {
            "scope": "meta.semantic-token.variable",
            "foreground": "#D8DEE9"
        },
        {
            "scope": "meta.semantic-token.property",
            "foreground": "#D8DEE9"
        },
        {
            "scope": "meta.semantic-token.enummember",
            // "foreground": "#D8DEE9"
            "foreground": "#c78f52",
        },
        // {
        //     "scope": "meta.semantic-token.event",
        //     "foreground": "#ff0000"
        // },
        {
            "scope": "meta.semantic-token.function",
            "foreground": "#88C0D0"
        },
        {
            "scope": " meta.semantic-token.method",
            "foreground": "#88C0D0"
        },
        {
            "scope": "meta.semantic-token.macro",
            "foreground": "#88C0D0"
        },
        {
            "scope": "meta.semantic-token.keyword",
            "foreground": "#81a1c1"
        },
        // {
        //     "scope": "meta.semantic-token.modifier",
        //     "foreground": "#ff0000"
        // },
        // {
        //     "scope": "meta.semantic-token.comment",
        //     "foreground": "#616E88"
        // },
        {
            "scope": "source.dart string.interpolated, meta.semantic-token.string",
            "foreground": "#a3be8c"
        },
        // {
        //     "scope": "meta.semantic-token.number",
        //     "foreground": "#ff0000"
        // },
        // {
        //     "scope": "meta.semantic-token.regexp",
        //     "foreground": "#ff0000"
        // },
        // {
        //     "scope": "meta.semantic-token.operator",
        //     "foreground": "#ff0000"
        // },
    ]
}